<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Control}" x:Key="BaseBoxItm">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="Yu Gothic UI Light"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="6"
                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Control}" x:Key="BaseBox" BasedOn="{StaticResource BaseBoxItm}">
        <Style.Triggers>
            <EventTrigger RoutedEvent="GotFocus">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#FF2C2C2C" Storyboard.TargetProperty="(Button.BorderBrush). (SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="LostFocus">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation To="White" Storyboard.TargetProperty="(Button.BorderBrush). (SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0:0.4"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="BaseBtn">
        <Setter Property="FontSize" Value ="17"/>
        <Setter Property="Foreground" Value="white"/>
        <Setter Property="Background" Value="#FF2C2C2C"/>

        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderBrush" Value="LightslateGray"/>
        <Setter Property="BorderThickness" Value="2"/>

        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="Yu Gothic UI Light"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="2" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="15" Direction="268" ShadowDepth="3" Color="#FFCECECE"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="MainBtnAnim" BasedOn="{StaticResource BaseBtn}">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="0" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Opacity)" FillBehavior="HoldEnd" Duration="0:0:0:0.3"/>
                            <ColorAnimation To="#286880" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0:0.3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation To="1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Opacity)" FillBehavior="HoldEnd" Duration="0:0:0:0.3"/>
                        <ColorAnimation To="White" Storyboard.TargetProperty="(Button.Foreground).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="BtnRedac" BasedOn="{StaticResource BaseBtn}">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="0.5" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Opacity)" FillBehavior="HoldEnd" Duration="0:0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation To="1" Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Opacity)" FillBehavior="HoldEnd" Duration="0:0:0:0.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Grid}" x:Key="Grid_Anim">
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="160" Storyboard.TargetProperty="(Grid.Width)" FillBehavior="HoldEnd" Duration="0:0:0:1">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation To="58" Storyboard.TargetProperty="(Grid.Width)" FillBehavior="HoldEnd" Duration="0:0:0:1">
                            <DoubleAnimation.EasingFunction>
                                <QuarticEase/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Border}" x:Key="Grid_Itm_Anim">
        <Setter Property="Background" Value="white"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation To="#FF959595" Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0:0.2"/>
                            <ColorAnimation To="White" Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation To="{x:Null}" Storyboard.TargetProperty="(Grid.Background).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0:0.2"/>
                        <ColorAnimation To="#FF1D487F" Storyboard.TargetProperty="(Label.Foreground).(SolidColorBrush.Color)" FillBehavior="HoldEnd" Duration="0:0:0:0.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="styleDatepicker" TargetType="{x:Type DatePicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border CornerRadius="5,5,5,5">
                        <Border.Background>
                            <SolidColorBrush Color="#FFDEDEDE" Opacity="1.0"/>
                        </Border.Background>
                        <Grid>
                            <DatePickerTextBox x:Name="PART_TextBox" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" Visibility="visible">
                                <DatePickerTextBox.Template>
                                    <ControlTemplate TargetType="DatePickerTextBox">
                                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <ContentControl Focusable="False" IsHitTestVisible="False" Opacity="1"/>
                                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                    </ControlTemplate>
                                </DatePickerTextBox.Template>
                            </DatePickerTextBox>
                            <Button x:Name="PART_Button">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <Button HorizontalAlignment="Right" Width="30" Style="{StaticResource BtnRedac}">
                                                        <Image Source="/Images/calendar.png" Width="20" Height="20"/>
                                                    </Button>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>